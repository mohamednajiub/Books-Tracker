{"version":3,"sources":["BooksAPI.js","Book.js","BookLibrary.js","SearchBook.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Book","_this","this","thumbnail","props","imageLinks","react_default","a","createElement","className","style","width","height","backgroundImage","onChange","event","moveShelf","target","value","currentShelf","disabled","title","authors","Component","BookLibrary","filter","map","key","src_Book","Link","to","SearchBook","state","searchedBooks","UpdateQuery","setState","updateSearchedBooks","BooksAPI","error","_this2","_this$state","type","placeholder","searchedBook","BooksApp","catch","err","console","log","_this3","Route","exact","path","render","src_BookLibrary","src_SearchBook","React","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bcb726a6.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, {Component} from \"react\"\r\n\r\nclass Book extends Component {\r\n    render() {\r\n        let thumbnail = this.props.book.imageLinks ? this.props.book.imageLinks.thumbnail : '';\r\n        return (\r\n            <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                    <div\r\n                        className=\"book-cover\"\r\n                        style={{\r\n                            width: 128,\r\n                            height: 193,\r\n                            backgroundImage: `url(\"${thumbnail}\")`\r\n                        }}\r\n                    >\r\n                    </div>\r\n                    <div className=\"book-shelf-changer\">\r\n                        <select onChange={ (event) => this.props.moveShelf(this.props.book, event.target.value) } value={this.props.currentShelf}>\r\n                            <option value=\"move\" disabled>Move to...</option>\r\n                            <option value=\"currentlyReading\">Currently Reading</option>\r\n                            <option value=\"wantToRead\">Want to Read</option>\r\n                            <option value=\"read\">Read</option>\r\n                            <option value=\"none\">None</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"book-title\">{this.props.book.title}</div>\r\n                <div className=\"book-authors\">{this.props.book.authors}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Book","import React, {Component} from \"react\"\r\nimport  { Link }  from \"react-router-dom\"\r\nimport  Book  from './Book'\r\n\r\nclass BookLibrary extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"list-books\">\r\n                <div className=\"list-books-title\">\r\n                    <h1>MyReads</h1>\r\n                </div>\r\n                <div className=\"list-books-content\">\r\n                    <div>\r\n                        <div className=\"bookshelf\">\r\n                            <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n                            <div className=\"bookshelf-books\">\r\n                                <ol className=\"books-grid\">\r\n                                    {this.props.books.filter(book=>book.shelf === 'currentlyReading').map((book) => (\r\n                                        <li key={book.id}>\r\n                                            <Book\r\n                                                book={book}\r\n                                                moveShelf={this.props.moveShelf}\r\n                                                currentShelf=\"currentlyReading\"\r\n                                            />\r\n                                        </li>\r\n                                    ))}\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bookshelf\">\r\n                            <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n                            <div className=\"bookshelf-books\">\r\n                                <ol className=\"books-grid\">\r\n                                    {this.props.books.filter(book=>book.shelf === 'wantToRead').map((book) => (\r\n                                        <li key={book.id}>\r\n                                            <Book\r\n                                                book={book}\r\n                                                moveShelf={this.props.moveShelf}\r\n                                                currentShelf=\"wantToRead\"\r\n                                            />\r\n                                        </li>\r\n                                    ))}\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bookshelf\">\r\n                            <h2 className=\"bookshelf-title\">Read</h2>\r\n                            <div className=\"bookshelf-books\">\r\n                                <ol className=\"books-grid\">\r\n                                    {this.props.books.filter(book=>book.shelf === 'read').map((book) => (\r\n                                        <li key={book.id}>\r\n                                            <Book\r\n                                                book={book}\r\n                                                moveShelf={this.props.moveShelf}\r\n                                                currentShelf=\"read\"\r\n                                            />\r\n                                        </li>\r\n                                    ))}\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"open-search\">\r\n                    <Link to=\"/search\">Add a book</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookLibrary","import React, {Component} from \"react\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Book from './Book'\r\n\r\nclass SearchBook extends Component {\r\n  state = {\r\n    query: '',\r\n    searchedBooks: []\r\n  }\r\n  UpdateQuery = (query) => {\r\n    this.setState({query: query})\r\n    this.updateSearchedBooks(query)\r\n  }\r\n  updateSearchedBooks = (query) => {\r\n    if (query) {\r\n      BooksAPI\r\n        .search(query)\r\n        .then((searchedBooks) => {\r\n          if (searchedBooks.error) {\r\n            this.setState({searchedBooks: []})\r\n          } else {\r\n            this.setState({searchedBooks: searchedBooks})\r\n          }\r\n        })\r\n    } else {\r\n      this.setState({searchedBooks: []})\r\n    }\r\n  }\r\n  render() {\r\n    const {query, searchedBooks} = this.state\r\n\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link className=\"close-search\" to=\"/\">Close</Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            <input\r\n              type=\"search\"\r\n              placeholder=\"Search by title or author\"\r\n              value={query}\r\n              onChange={(event) => this.UpdateQuery(event.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n            {searchedBooks.map((searchedBook) => {\r\n              let shelf = 'none';\r\n              this.props.books.map(book => (book.id === searchedBook.id ? shelf = book.shelf : ''));\r\n              return (\r\n                <li key={searchedBook.id}>\r\n                  <Book\r\n                    book={searchedBook}\r\n                    moveShelf={this.props.moveShelf}\r\n                    currentShelf={shelf}\r\n                  />\r\n                </li>\r\n              )\r\n            })}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBook","import React from 'react'\r\nimport { Route } from \"react-router-dom\";\r\nimport * as BooksAPI from './BooksAPI'\r\nimport  BookLibrary  from './BookLibrary';\r\nimport  SearchBook  from './SearchBook';\r\nimport './App.css'\r\n\r\nclass BooksApp extends React.Component {\r\n  state= {\r\n    books: []\r\n  }\r\n  componentDidMount(){\r\n    BooksAPI.getAll().then((books) => {\r\n      this.setState({books: books})\r\n    }).catch((err)=>{\r\n      console.log(err)\r\n    })\r\n  }\r\n  moveShelf = (book, shelf) => {\r\n    BooksAPI.update(book, shelf).then(() => {\r\n      BooksAPI.getAll().then((books) => { \r\n        this.setState({books: books})\r\n      });\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"app\">          \r\n        <Route exact path='/' render={()=> <BookLibrary books={this.state.books} moveShelf={this.moveShelf} />}/>\r\n        <Route path='/search' render={()=> <SearchBook moveShelf={this.moveShelf} books={this.state.books} /> }/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\r\n"],"sourceRoot":""}